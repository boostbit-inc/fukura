name: Rust CI

on:
  workflow_call:
    inputs:
      rust-version:
        description: 'Rust version to use'
        required: false
        type: string
        default: 'stable'
      features:
        description: 'Features to enable'
        required: false
        type: string
        default: ''
      target:
        description: 'Target to build for'
        required: false
        type: string
        default: ''
    secrets:
      CARGO_REGISTRY_TOKEN:
        description: 'Token for cargo registry'
        required: false

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5.0.0

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ inputs.rust-version }}
        components: rustfmt, clippy
        targets: ${{ inputs.target }}

    - name: Cache cargo registry
      uses: actions/cache@v4.0.0
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ inputs.rust-version }}-${{ inputs.target }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ inputs.rust-version }}-
          ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev pkg-config

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run tests
      run: cargo test --verbose

    - name: Build
      run: cargo build --verbose --release

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5.0.0

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ inputs.rust-version }}

    - name: Cache cargo registry
      uses: actions/cache@v4.0.0
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ inputs.rust-version }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ inputs.rust-version }}-
          ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Run security audit
      run: cargo audit

    - name: Install cargo-deny
      run: cargo install cargo-deny

    - name: Run cargo-deny
      run: cargo deny check

  build:
    name: Build Release
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5.0.0

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ inputs.rust-version }}

    - name: Cache cargo registry
      uses: actions/cache@v4.0.0
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ inputs.rust-version }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ inputs.rust-version }}-
          ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-

    - name: Build release binary
      run: cargo build --release

    - name: Upload release artifacts
      uses: actions/upload-artifact@v4.0.0
      with:
        name: fukura-${{ runner.os }}-${{ github.sha }}
        path: target/release/fukura
